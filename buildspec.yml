version: 0.2

env:
  variables:
    cluster: "viper"
    ECR_URL: "378582414855.dkr.ecr.eu-central-1.amazonaws.com"
 

phases:
  install:
    commands:
  #    - npm install -g node
    - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
    - chmod +x ./aws-iam-authenticator
    - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - mv ./kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
      # Set app name and app version
      - export VERSION=$(node -p "require('./package.json').version")      
      - export APP_NAME=$(node -p "require('./package.json').name")    
  
      - mkdir ~/.kube/
      - cp config.yml ~/.kube/config

     # - npm install
  build:
    commands:
      - npm build
  post_build:
    commands:
      # - echo Entered the post_build phase...

      # - aws ecr get-login-password --region eu-central-1 | docker login --username AWS  --password-stdin ${ECR_URL}

      # - aws ecr describe-repositories --repository-names ${cluster}/${APP_NAME} || aws ecr create-repository --repository-name ${cluster}/${APP_NAME}

      # - docker build -t ${APP_NAME} .

      # - docker tag ${APP_NAME}:latest ${ECR_URL}/${cluster}/${APP_NAME}:latest

      # - docker tag ${APP_NAME} ${ECR_URL}/${cluster}/${APP_NAME}:${VERSION}

      # - docker push ${ECR_URL}/${cluster}/${APP_NAME}

      # - echo Build completed on `date`




   #################################
      - echo Entered the kubectl phase...

      - aws sts get-caller-identity

   #   - aws eks --region eu-central-1 update-kubeconfig --name new-eks-cluster 

   #   - kubectl apply -f aws-auth-cm.yaml

   #   - kubectl get configmap -n kube-system aws-auth -o yaml

      -  kubectl config get-contexts

      - kubectl get svc

     

artifacts:
  files:
    - '**/*'
  base-directory: dist