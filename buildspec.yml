version: 0.2

phases:
  install:
    commands:
      - wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.0-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz
      - chmod +x ./linux-amd64/helm
      - mv ./linux-amd64/helm /usr/local/bin/helm

      pre_build:
    commands:

      - export APP_VERSION=$(node -p "require('./package.json').version")      
      - export APP_NAME=$(node -p "require('./package.json').name")    
      
  build:
    commands:
      - npm build
  post_build:
    commands:
      - echo Entered ECS phase...

      - aws ecr get-login-password --region  ${AWS_REGION} | docker login --username AWS  --password-stdin ${ECR_URL}

      - aws ecr describe-repositories --repository-names ${CONTEXT}/${APP_NAME} || aws ecr create-repository --repository-name ${CONTEXT}/${APP_NAME}

      - docker build -t ${APP_NAME} .

      - docker tag ${APP_NAME}:latest ${ECR_URL}/${CONTEXT}/${APP_NAME}:latest

      - docker tag ${APP_NAME} ${ECR_URL}/${CONTEXT}/${APP_NAME}:${APP_VERSION}

      - docker push ${ECR_URL}/${CONTEXT}/${APP_NAME}

      - echo ECS phase completed.

      - echo Entered EKS phase...

      - aws sts get-caller-identity

      - aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER}

      - kubectl -n kube-system get deployment
      
      - helm init

      - cd helm && helm install --name ${APP_NAME} . --set image.repository=${ECR_URL}/${CONTEXT}/${APP_NAME}:latest --set image.tag=latest 
     

artifacts:
  files:
    - '**/*'
  base-directory: dist